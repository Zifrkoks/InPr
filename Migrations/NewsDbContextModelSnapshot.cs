// <auto-generated />
using System;
using InPr.Domain.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InPr.Migrations
{
    [DbContext(typeof(NewsDbContext))]
    partial class NewsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("InPr.Domain.Database.Models.Article", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("TEXT")
                        .HasColumnName("Date_Created");

                    b.Property<int>("Readers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            DateTimeCreated = new DateTime(2022, 4, 20, 16, 34, 59, 982, DateTimeKind.Local).AddTicks(7098),
                            Readers = 0,
                            Text = "bruh",
                            Title = "lol",
                            userId = 1
                        });
                });

            modelBuilder.Entity("InPr.Domain.Database.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            id = 2,
                            Name = "reader"
                        });
                });

            modelBuilder.Entity("InPr.Domain.Database.Models.User", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Verified_Email")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Verified_Email");

                    b.HasKey("id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Age = 20,
                            Email = "qweasdzxcwsxxsw1234@gmail.com",
                            Name = "Zifrkoks",
                            Password = "10122002Z",
                            RoleId = 1,
                            Verified_Email = true
                        });
                });

            modelBuilder.Entity("InPr.Domain.Database.Models.Article", b =>
                {
                    b.HasOne("InPr.Domain.Database.Models.User", "user")
                        .WithMany("Articles")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("InPr.Domain.Database.Models.User", b =>
                {
                    b.HasOne("InPr.Domain.Database.Models.Role", "UserRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("InPr.Domain.Database.Models.User", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
